{"version":3,"sources":["/Users/thejameskyle/git/marionette/backbone-metal/src/backbone-metal.js"],"names":[],"mappings":"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","file":"backbone-metal.min.js","sourcesContent":["(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['backbone', 'underscore'], factory);\n  } else if (typeof exports !== 'undefined') {\n    module.exports = factory(require('backbone'), require('underscore'));\n  } else {\n    factory(root.Backbone, root._);\n  }\n})(this, function(Backbone, _) {\n\n  var Metal = {};\n  \n  function wrap(method, superMethod) {\n    return function() {\n      var prevSuper = this._super;\n      this._super = superMethod;\n      var ret = method.apply(this, arguments);\n      this._super = prevSuper;\n      return ret;\n    };\n  }\n  \n  var superTest = (/xyz/.test(function(){return 'xyz';})) ? /\\b_super\\b/ : /.*/;\n  \n  function wrapAll(dest, source) {\n    _.forEach(source, function(method, name) {\n      var superMethod = dest[name];\n      var hasSuper = superTest.test(method);\n  \n      if (hasSuper && _.isFunction(method) && _.isFunction(superMethod)) {\n        dest[name] = wrap(method, superMethod);\n      } else {\n        dest[name] = method;\n      }\n    });\n  }\n  \n  var Class = Metal.Class = Backbone.Class = function() {\n    this.initialize.apply(this, arguments);\n  };\n  \n  Class.prototype.initialize = _.noop;\n  \n  _.extend(Class, {\n    extend(protoProps, staticProps) {\n      var Parent = this;\n      var Child;\n  \n      if (protoProps && _.has(protoProps, 'constructor')) {\n        Child = wrap(protoProps.constructor, Parent.prototype.constructor);\n      } else {\n        Child = function() { Parent.apply(this, arguments); };\n      }\n  \n      _.extend(Child, Parent);\n      wrapAll(Child, staticProps);\n  \n      var Surrogate = function() { this.constructor = Child; };\n      Surrogate.prototype = Parent.prototype;\n      Child.prototype = new Surrogate();\n  \n      wrapAll(Child.prototype, protoProps);\n  \n      Child.superclass = Parent;\n      Child.__super__ = Parent.prototype;\n  \n      return Child;\n    },\n  \n    mixin(protoProps) {\n      wrapAll(this.prototype, protoProps);\n      return this;\n    },\n  \n    include(staticProps) {\n      wrapAll(this, staticProps);\n      return this;\n    }\n  });\n  \n  var Mixin = Metal.Mixin = Backbone.Mixin = function(protoProps) {\n    _.extend(this, protoProps);\n  };\n  \n  _.mixin({\n    isClass: function(value) {\n      return value && value.prototype instanceof Class;\n    },\n  \n    isMixin: function(value) {\n      return value && value instanceof Mixin;\n    }\n  });\n  \n  var errorProps = [\n    'description', 'fileName', 'lineNumber', 'name', 'message', 'number'\n  ];\n  \n  var Err = Metal.Error = Backbone.Error = Class.extend({\n    urlRoot: 'http://github.com/thejameskyle/backbone-metal',\n  \n    constructor(message, options = {}) {\n      if (_.isObject(message)) {\n        options = message;\n        message = options.message;\n      }\n  \n      var error = Error.call(this, message);\n      _.extend(this, _.pick(error, errorProps), _.pick(options, errorProps));\n  \n      this.captureStackTrace();\n  \n      if (options.url) {\n        this.url = this.urlRoot + options.url;\n      }\n    },\n  \n    captureStackTrace() {\n      if (Error.captureStackTrace) {\n        Error.captureStackTrace(this, Err);\n      }\n    },\n  \n    toString() {\n      return this.name + ': ' + this.message + (\n        this.url ? ' See: ' + this.url : ''\n      );\n    }\n  });\n  \n  var deprecate = Metal.deprecate = Backbone.deprecate = function(message, test) {\n    if (test === undefined || !test) {\n      return;\n    }\n  \n    if (_.isObject(message)) {\n      message = deprecate._format(message.prev, message.next, message.url);\n    }\n  \n    message = message && message.toString();\n  \n    if (!deprecate._cache[message]) {\n      deprecate._warn('Deprecation warning: ' + message);\n      deprecate._cache[message] = true;\n    }\n  };\n  \n  deprecate._format = function(prev, next, url) {\n    return (\n      prev + ' is going to be removed in the future. ' +\n      'Please use ' + next + ' instead.' +\n      (url ? ' See: ' + url : '')\n    );\n  };\n  \n  if (typeof console !== 'undefined') {\n    deprecate._warn = console.warn || console.log;\n  }\n  \n  if (!deprecate._warn) {\n    deprecate._warn = _.noop;\n  }\n  \n  deprecate._cache = {};\n  \n  var Events = Metal.Events = Backbone.Events = new Mixin(Backbone.Events);\n  \n  Class.mixin(Events);\n  \n  // split the event name on the \":\"\n  var triggerSplitter = /(^|:)(\\w)/gi;\n  \n  // take the event section (\"section1:section2:section3\")\n  // and turn it in to uppercase name\n  function getEventName(match, prefix, eventName) {\n    return eventName.toUpperCase();\n  }\n  \n  var Utils = Metal.Utils = Backbone.Utils = new Mixin({\n    triggerMethod(event, ...args) {\n      // get the method name from the event name\n      var methodName = 'on' + event.replace(triggerSplitter, getEventName);\n      var method = this[methodName];\n      var result;\n  \n      // call the onMethodName if it exists\n      if (_.isFunction(method)) {\n        // pass all arguments, except the event name\n        result = method.apply(this, args);\n      }\n  \n      // trigger the event, if a trigger method exists\n      if (_.isFunction(this.trigger)) {\n        this.trigger.apply(this, arguments);\n      }\n  \n      return result;\n    },\n  \n    triggerMethodOn(context, ...args) {\n      return this.triggerMethod.apply(context, args);\n    },\n  \n    getOption(name) {\n      if (this.options && this.options[name]) {\n        return this.options[name];\n      } else {\n        return this[name];\n      }\n    }\n  });\n  \n  Class.mixin(Utils);\n  \n\n});\n"],"sourceRoot":"/source/"}